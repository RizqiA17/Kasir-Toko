/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Component;

import Service.Database;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author smart user
 */
public class Data_Barang extends javax.swing.JPanel {

    private Database db = new Database();
    private ResultSet rs;

    /**
     * Creates new form Data_Barang
     */
    public Data_Barang() {
        initComponents();
        SetDataBarang();
        SetSupplierOption();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Kode = new javax.swing.JTextField();
        NamaBarang = new javax.swing.JTextField();
        Harga = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        StokInput = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        Cari = new javax.swing.JTextField();

        jLabel7.setText("jLabel7");

        setBackground(new java.awt.Color(38, 38, 38));
        setForeground(new java.awt.Color(204, 204, 204));

        jLabel1.setBackground(new java.awt.Color(20, 20, 20));
        jLabel1.setFont(new java.awt.Font("Cascadia Code", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Data Barang");
        jLabel1.setFocusable(false);

        jPanel6.setBackground(new java.awt.Color(38, 38, 38));
        jPanel6.setLayout(new java.awt.GridLayout(2, 1, 5, 5));

        jPanel1.setBackground(new java.awt.Color(38, 38, 38));
        jPanel1.setForeground(new java.awt.Color(204, 204, 204));
        jPanel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.setLayout(new java.awt.GridLayout(2, 3, 5, 5));

        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setText("Kode");
        jPanel1.add(jLabel8);

        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Nama Barang");
        jPanel1.add(jLabel2);

        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("Harga");
        jPanel1.add(jLabel3);

        Kode.setBackground(new java.awt.Color(51, 51, 51));
        Kode.setForeground(new java.awt.Color(204, 204, 204));
        Kode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Kode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                KodeFocusLost(evt);
            }
        });
        Kode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KodeActionPerformed(evt);
            }
        });
        Kode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                KodeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                KodeKeyTyped(evt);
            }
        });
        jPanel1.add(Kode);

        NamaBarang.setBackground(new java.awt.Color(51, 51, 51));
        NamaBarang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        NamaBarang.setForeground(new java.awt.Color(204, 204, 204));
        NamaBarang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        NamaBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NamaBarangActionPerformed(evt);
            }
        });
        NamaBarang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NamaBarangKeyReleased(evt);
            }
        });
        jPanel1.add(NamaBarang);

        Harga.setBackground(new java.awt.Color(51, 51, 51));
        Harga.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Harga.setForeground(new java.awt.Color(204, 204, 204));
        Harga.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Harga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HargaActionPerformed(evt);
            }
        });
        Harga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                HargaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                HargaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HargaKeyTyped(evt);
            }
        });
        jPanel1.add(Harga);

        jPanel6.add(jPanel1);

        jPanel3.setBackground(new java.awt.Color(38, 38, 38));
        jPanel3.setForeground(new java.awt.Color(204, 204, 204));
        jPanel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel3.setLayout(new java.awt.GridLayout(2, 3, 5, 5));

        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("Stok");
        jPanel3.add(jLabel4);

        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("Supplier");
        jPanel3.add(jLabel6);

        jPanel7.setBackground(new java.awt.Color(38, 38, 38));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 308, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel7);

        StokInput.setBackground(new java.awt.Color(51, 51, 51));
        StokInput.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        StokInput.setForeground(new java.awt.Color(204, 204, 204));
        StokInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        StokInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                StokInputKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                StokInputKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                StokInputKeyTyped(evt);
            }
        });
        jPanel3.add(StokInput);

        jComboBox1.setBackground(new java.awt.Color(51, 51, 51));
        jComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(204, 204, 204));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        jComboBox1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel3.add(jComboBox1);

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(204, 204, 204));
        jButton1.setText("Tambah");
        jButton1.setPreferredSize(new java.awt.Dimension(64, 30));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        jPanel6.add(jPanel3);

        jTable1.setBackground(new java.awt.Color(51, 51, 51));
        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(204, 204, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Kode", "Nama Barang", "Harga", "Stok", "Supplier"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(102, 102, 102));
        jTable1.setSelectionBackground(new java.awt.Color(51, 51, 51));
        jTable1.setSelectionForeground(new java.awt.Color(204, 204, 204));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("Cari");

        Cari.setBackground(new java.awt.Color(51, 51, 51));
        Cari.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Cari.setForeground(new java.awt.Color(204, 204, 204));
        Cari.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CariKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Cari)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cari, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        // Clear Table
        DefaultTableModel tbModel = (DefaultTableModel) jTable1.getModel();
        int lenght = tbModel.getRowCount();
        for (int i = 0; i < lenght; i++) {
            try {
                tbModel.removeRow(0);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }

        // Initialitation Variable
        String nama = NamaBarang.getText().toLowerCase();
        String kodeBarang = Kode.getText();
        int stok = Integer.valueOf(StokInput.getText());
        int harga = Integer.valueOf(Harga.getText());

        // Initialisation Query Get Barang
        String queryGetBarang = "SELECT * FROM `barang` WHERE id = '" + kodeBarang + "'";
        String query = queryGetBarang;

        // Get Supplier Id
        String supplier = (String) jComboBox1.getSelectedItem();
        String idSupplier = "";
        query = "SELECT * FROM `supplier` WHERE nama = '" + supplier + "'";
        db.Query(query);
        rs = db.resultSet();
        try {
            while (rs.next()) {
                idSupplier = rs.getString("id");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Data_Barang.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Data Algoritm
        rs = DataBarang(queryGetBarang);
        try {

            int idBarang = -1;

            // Calc New Stok
            if (rs.next()) {
                idBarang = rs.getInt("id");
                int totalStok = stok + rs.getInt("stok");
                query = "UPDATE `barang` SET stok = '" + totalStok + "' WHERE id = '" + idBarang + "'";
                db.Query(query);
                if (db.AddData() == 0) {
                    JOptionPane.showMessageDialog(null, "GAGAL MENAMBAH STOK!!!");
                }
            } // Add New Barang
            else if (!rs.next()) {
                query = "INSERT INTO `barang` (`id`, `nama_barang`, `harga`, `stok`, `id_supplier`) VALUES(" + kodeBarang + ", '" + nama + "', '" + harga + "', '" + stok + "', '" + idSupplier + "')";
                db.Query(query);
                if (db.AddData() > 0) {
                    rs = DataBarang(queryGetBarang);
                    if (rs.next()) {
                        idBarang = rs.getInt("id");
                    }
                }
            }

            // Add History
            query = "INSERT INTO `riwayat_barang` (`id`, `id_barang`, `jumlah_barang`) VALUES (null, '" + kodeBarang + "', '" + stok + "')";
            db.Query(query);

            // Set TextField Null
            if (db.AddData() > 0) {
                Kode.setText("");
                NamaBarang.setText("");
                StokInput.setText("");
                Harga.setText("");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Data_Barang.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Reset Table
        SetDataBarang();
        Harga.setEditable(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void CariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CariKeyReleased
        // TODO add your handling code here:
        DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> srt = new TableRowSorter<>(tb);
        jTable1.setRowSorter(srt);
        srt.setRowFilter(RowFilter.regexFilter(Cari.getText()));
    }//GEN-LAST:event_CariKeyReleased

    private void HargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HargaActionPerformed

    private void NamaBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NamaBarangActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_NamaBarangActionPerformed

    private void NamaBarangKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NamaBarangKeyReleased
        // TODO add your handling code here:
        DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
        int col = tb.findColumn("Nama Barang");
        int totalRow = tb.getRowCount();
        for (int i = 0; i < totalRow; i++) {
            if (tb.getValueAt(i, col).toString().toLowerCase().equals(NamaBarang.getText().toLowerCase())) {
                Kode.setText(tb.getValueAt(i, tb.findColumn("Kode")).toString());
                Harga.setText(tb.getValueAt(i, tb.findColumn("Harga")).toString().toLowerCase());
                Harga.setEditable(false);
                jLabel4.setText("Stok Masuk");
                break;
            } else {
                jLabel4.setText("Stok");
                Kode.setText("");
                Harga.setEditable(true);
                Harga.setText("");
            }
        }
    }//GEN-LAST:event_NamaBarangKeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
        int row = jTable1.getSelectedRow();
        Kode.setText(tb.getValueAt(row, tb.findColumn("Kode")).toString());
        NamaBarang.setText(tb.getValueAt(row, tb.findColumn("Nama Barang")).toString().toLowerCase());
        Harga.setText(tb.getValueAt(row, tb.findColumn("Harga")).toString().toLowerCase());
        Harga.setEditable(false);
        jLabel4.setText("Stok Masuk");
    }//GEN-LAST:event_jTable1MouseClicked

    private void HargaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HargaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_HargaKeyPressed

    private void StokInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StokInputKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_StokInputKeyPressed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void KodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KodeActionPerformed

    private void KodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KodeKeyReleased
        // TODO add your handling code here:
        Kode.setEditable(true);

        DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
        int col = tb.findColumn("Kode");
        int totalRow = tb.getRowCount();
        for (int i = 0; i < totalRow; i++) {
            if (tb.getValueAt(i, col).toString().toLowerCase().equals(Kode.getText().toLowerCase())) {
                NamaBarang.setText(tb.getValueAt(i, tb.findColumn("Nama Barang")).toString());
                Harga.setText(tb.getValueAt(i, tb.findColumn("Harga")).toString().toLowerCase());
                Harga.setEditable(false);
                jLabel4.setText("Stok Masuk");
                break;
            } else {
                jLabel4.setText("Stok");
                Harga.setEditable(true);
                Harga.setText("");
            }
        }
    }//GEN-LAST:event_KodeKeyReleased

    private void KodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KodeKeyTyped
        // TODO add your handling code here:
        Kode.setEditable(IsNumber(evt));
    }//GEN-LAST:event_KodeKeyTyped

    private void HargaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HargaKeyReleased
        // TODO add your handling code here:
        Harga.setEditable(true);
    }//GEN-LAST:event_HargaKeyReleased

    private void HargaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HargaKeyTyped
        // TODO add your handling code here:
        Harga.setEditable(IsNumber(evt));
    }//GEN-LAST:event_HargaKeyTyped

    private void StokInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StokInputKeyTyped
        // TODO add your handling code here:
        StokInput.setEditable(IsNumber(evt));
    }//GEN-LAST:event_StokInputKeyTyped

    private void StokInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StokInputKeyReleased
        // TODO add your handling code here:
        StokInput.setEditable(true);
    }//GEN-LAST:event_StokInputKeyReleased

    private void KodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_KodeFocusLost
        // TODO add your handling code here:
        DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
        int col = tb.findColumn("Kode");
        int totalRow = tb.getRowCount();

        for (int i = 0; i < totalRow; i++) {
            System.out.print(!tb.getValueAt(i, tb.findColumn("Nama Barang")).toString().equals(NamaBarang.getText().toLowerCase()));
            if (tb.getValueAt(i, tb.findColumn("Nama Barang")).toString().equals(NamaBarang.getText().toLowerCase())) {
                break;
            }
            else{
                NamaBarang.setText("");
            }
        }
    }//GEN-LAST:event_KodeFocusLost

    private ResultSet DataBarang(String query) {
        db.Query(query);
        return db.resultSet();
    }

    private void SetDataBarang() {
        String query = "SELECT * FROM barang, supplier WHERE barang.id_supplier = supplier.id";
        db.Query(query);
        rs = db.resultSet();
        try {
            int no = 0;

            while (rs.next()) {
                no++;
                String id = Long.toString(rs.getLong("id"));
                String nama = rs.getString("nama_barang");
                String stok = rs.getString("stok");
                String harga = rs.getString("harga");
                String supplier = rs.getString("supplier.nama");

                String tbData[] = {Integer.toString(no), id, nama, harga, stok, supplier};
                DefaultTableModel tbModel = (DefaultTableModel) jTable1.getModel();

                tbModel.addRow(tbData);
            }

        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }

    private void SetSupplierOption() {
        int row = 0;

        try {
            for (int i = 0; i < 2; i++) {
                String query = "SELECT kode, nama FROM supplier";
                db.Query(query);
                rs = db.resultSet();

                if (i < 1) {
                    while (rs.next()) {
                        row++;
                    }
                }
            }

            String model[] = new String[row];
            DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();

            int i = 0;
            while (rs.next()) {
                model[i] = rs.getString("nama");
                comboBoxModel.addElement(model[i]);
                i++;
            }

            jComboBox1.setModel(comboBoxModel);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }

    private boolean IsNumber(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        return !Character.isLetter(c);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Cari;
    private javax.swing.JTextField Harga;
    private javax.swing.JTextField Kode;
    private javax.swing.JTextField NamaBarang;
    private javax.swing.JTextField StokInput;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
